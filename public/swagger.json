{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Pick_User.Exclude_keyofUser.createdAt-or-updatedAt__": {
				"properties": {},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"EStatisticProperty": {
				"enum": [
					"goals",
					"assists",
					"wins",
					"losses",
					"draws"
				],
				"type": "string"
			},
			"TUserStatisticUpdatePayload": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/EStatisticProperty"
					}
				},
				"required": [
					"id",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "sportstoryhubbl",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/api/user/all": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Omit_User.createdAt-or-updatedAt_"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/user/getById/{id}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Omit_User.createdAt-or-updatedAt_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/user/getByUserName/{username}": {
			"get": {
				"operationId": "GetUserByUsername",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Omit_User.createdAt-or-updatedAt_"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/user/update": {
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TUserStatisticUpdatePayload"
							}
						}
					}
				}
			}
		},
		"/api/participant/all": {
			"get": {
				"operationId": "GetAllParticipants",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Omit_User.createdAt-or-updatedAt_"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Participant"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}